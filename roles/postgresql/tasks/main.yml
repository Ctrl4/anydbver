---
# tasks file for postgresql
- name: enable Percona Distribution for PostgreSQL 11.5
  when: percona_postgresql_version.startswith('11.5')
  command:
    cmd: /usr/bin/percona-release enable ppg-11.5
    creates: /etc/yum.repos.d/percona-ppg-11.5-release.repo
- name: enable Percona Distribution for PostgreSQL 11.6 and 11.7
  when: percona_postgresql_version.startswith('11.6') or percona_postgresql_version.startswith('11.7')
  command:
    cmd: /usr/bin/percona-release enable ppg-11
    creates: /etc/yum.repos.d/percona-ppg-11-release.repo
- name: enable Percona Distribution for PostgreSQL 12.2
  when: percona_postgresql_version.startswith('12.2')
  command:
    cmd: /usr/bin/percona-release enable ppg-12.2 testing
    creates: /etc/yum.repos.d/percona-ppg-12.2-testing.repo
- name: enable Percona Distribution for PostgreSQL 12.3
  when: percona_postgresql_version.startswith('12.3')
  command:
    cmd: /usr/bin/percona-release enable ppg-12.3 testing
    creates: /etc/yum.repos.d/percona-ppg-12.3-testing.repo
- name: enable Percona Distribution for PostgreSQL 13
  when: percona_postgresql_version.startswith('13')
  command:
    cmd: /usr/bin/percona-release enable ppg-13
    creates: /etc/yum.repos.d/percona-ppg-13-release.repo

- name: Postgresql repo
  when: postgresql_version != '' and (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
  yum:
    name: "{{os[dist][soft].repo_url}}"
    state: present

- name: Postgresql repo on el8, disable dnf module postgresql
  when: postgresql_version != '' and dist == 'el8'
  shell:
    warn: false
    cmd: dnf -qy module disable postgresql ; touch /root/dist-postgresql.disabled
    creates: /root/dist-postgresql.disabled

- name: Install db packages
  when: postgresql_version != '' or percona_postgresql_version != ''
  include_tasks: common/tasks/install_db_packages.yml

- name: install Percona Distribution for PostgreSQL
  when: percona_postgresql_version.startswith('11.') or percona_postgresql_version.startswith('12.') or percona_postgresql_version.startswith('13.')
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "percona-postgresql{{ percona_postgresql_major_ver }}-libs-{{ percona_postgresql_version }}.el7.x86_64"
    - "percona-postgresql{{ percona_postgresql_major_ver }}-{{ percona_postgresql_version }}.el7.x86_64"
    - "percona-postgresql{{ percona_postgresql_major_ver }}-server-{{ percona_postgresql_version }}.el7.x86_64"
    - "percona-postgresql{{ percona_postgresql_major_ver }}-contrib-{{ percona_postgresql_version }}.el7.x86_64"

- name: install pg_stat_monitor for Percona Distribution for PostgreSQL
  when: pmm_client_version != '' and (percona_postgresql_version.startswith('11.') or percona_postgresql_version.startswith('12.') or percona_postgresql_version.startswith('13.') )
  package:
    name: "percona-pg-stat-monitor{{ percona_postgresql_major_ver }}"
    state: present

- name: Create Postgres Database
  when: (percona_postgresql_version.startswith('11.') or percona_postgresql_version.startswith('12.') or percona_postgresql_version.startswith('13.') or postgresql_version != '' ) and db_password != ""
  vars:
    maj: "{{'9.5' if postgresql_version.startswith('9.5') else '9.6' if postgresql_version.startswith('9.6') else postgresql_version|regex_replace('^([0-9]+)\\..*$','\\1') if postgresql_version != '' else percona_postgresql_version|regex_replace('^([0-9]+)\\..*$','\\1')   }}"
  shell:
    cmd: >-
      echo {{ db_password }} > /tmp/root-pw.txt;
      PGSETUP_INITDB_OPTIONS='--pwfile=/tmp/root-pw.txt' /usr/pgsql-{{maj}}/bin/postgresql{{'95' if postgresql_version.startswith('9.5') else '96' if postgresql_version.startswith('9.6') else '-'+maj}}-setup initdb;
      echo "listen_addresses = '*'" >> /var/lib/pgsql/{{maj}}/data/postgresql.conf;
      echo 'host    all             all             0.0.0.0/0            {{'md5' if ldap_server_ip == '' else 'ldap ldapurl="ldap://'+ldap_server_ip+':389/dc=percona,dc=local?uid?sub"' }}' >> /var/lib/pgsql/{{maj}}/data/pg_hba.conf;
      echo 'host    replication     all             0.0.0.0/0            md5' >> /var/lib/pgsql/{{maj}}/data/pg_hba.conf;
      echo $(/bin/bash /vagrant/tools/node_ip.sh):5432:*:postgres:{{db_password}} > ~/.pgpass ;
      chmod 0600 ~/.pgpass
    creates: "/var/lib/pgsql/{{maj}}/data/pg_hba.conf"

- name: Apply database options from file
  when: db_opts_file != '' and (postgresql_version != '' or percona_postgresql_version != '')
  command:
    cmd: >-
      /bin/bash /vagrant/tools/apply_mysql_conf.sh
      "{{ os[dist][soft].cnf_file }}"
      "/vagrant/configs/{{ db_opts_file }}"
      "{{cluster_name}}"
      "{{db_user}}"
      "{{db_password}}"
    creates: "/root/{{ db_opts_file | basename }}.applied"

- name: Setup Kerberos for PG
  when: kerberos_client != '' and (postgresql_version != '' or percona_postgresql_version != '')
  command:
    cmd: /bin/bash /vagrant/tools/setup_pg_kerberos.sh "{{db_user}}" "{{db_password}}"
    creates: /etc/sysconfig/pgsql/krb5.keytab

- name: Setup and start streaming physical replication with slots
  when: master_ip != '' and ( percona_postgresql_version != '' or postgresql_version != '')
  vars:
    maj: "{{'9.5' if postgresql_version.startswith('9.5') else '9.6' if postgresql_version.startswith('9.6') else postgresql_version|regex_replace('^([0-9]+)\\..*$','\\1') if postgresql_version != '' else percona_postgresql_version|regex_replace('^([0-9]+)\\..*$','\\1')   }}"
  shell:
    cmd: >-
      /bin/bash /vagrant/tools/setup_postgresql_replication.sh
      streaming_physical_slots
      {{master_ip}}
      postgres
      {{db_password}}
      postgres
      /var/lib/pgsql/{{maj}}/data
      postgresql-{{maj}}
    creates: /root/replication.configured

- name: Create LDAP user in postgres
  when: (postgresql_version != '' or percona_postgresql_version != '') and ldap_server_ip != '' and db_user != ''
  shell:
    cmd: >-
      sudo -u postgres createuser "{{db_user}}";
      sudo -u postgres psql -c 'grant all on database postgres to {{db_user}}';
- name: Install Yandex Odyssey
  when: odyssey_version != ''
  block:
    - name: Install tar
      package:
        name: tar
        state: present
    - name: download and install odyssey
      shell:
        warn: false
        cmd: >-
          curl -L -s https://github.com/yandex/odyssey/releases |
          grep -F {{odyssey_version}}|grep linux-amd64|
          sed -e 's,^.*a href=.,https://github.com,' -e 's,. rel=.nofollow.*$,,' |
          xargs -n 1 curl -s -L --output /tmp/odyssey.tar.gz;
          tar -C /usr/bin/ -xzf /tmp/odyssey.tar.gz;
          rm -rf /tmp/odyssey.tar.gz
        creates: /usr/bin/odyssey

- name: Setup Odyssey
  when: odyssey_version != '' and master_ip != ''
  shell:
    cmd: /bin/bash /vagrant/tools/setup_pg_odyssey.sh "{{master_ip}}" "{{db_password}}"
    creates: /etc/odyssey/odyssey.conf

- name: Install WAL-G
  when: walg_version != ''
  block:
    - name: Install tar
      package:
        name: tar
        state: present
    - name: download and install wal-g
      shell:
        warn: false
        cmd: >-
          curl -L -s https://github.com/wal-g/wal-g/releases |
          grep -F {{walg_version}}|grep linux-amd64|
          sed -e 's,^.*a href=.,https://github.com,' -e 's,. rel=.nofollow.*$,,' |
          head -n 1 |
          xargs -n 1 curl -s -L --output /tmp/walg.tar.gz;
          tar -C /usr/bin/ -xzf /tmp/walg.tar.gz;
          rm -rf /tmp/walg.tar.gz
        creates: /usr/bin/wal-g



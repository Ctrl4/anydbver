---
# tasks file for mysql
- name: Enable EPEL
  when: >
    orchestrator_version != '' and
    (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  package:
    name: epel-release
    state: present
- name: enable Percona MySQL 8.0 repo
  when: percona_server_version.startswith('8.0') or percona_xtradb_cluster_version.startswith('8.0')
  command:
    cmd: /usr/bin/percona-release enable "{{ os[dist][soft].repo_enable_str }}"
    creates: "{{ os[dist][soft].repo_file }}"
  register: percona_release_enabled
  
- name: MySQL repo
  when: mysql_version != '' or mysql_router_version != ''
  block:
    - name: MySQL 8.0 yum repo
      when: >
        (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
      yum:
        name: "{{os[dist][soft].repo_url}}"
        state: present
    - name: Switch mysql repo 5.7
      when: >
        mysql_version.startswith('5.7') and
        (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
      shell:
        cmd: "yum-config-manager --disable mysql80-community; yum-config-manager --enable mysql57-community"
    - name: Switch mysql repo 5.6
      when: >
        mysql_version.startswith('5.6') and
        (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
      shell:
        cmd: "yum-config-manager --disable mysql80-community; yum-config-manager --enable mysql56-community"

- name: Disable Redhat MySQL module
  when: (mysql_version != '' or percona_server_version != '' or percona_xtradb_cluster_version != '') and dist == 'el8'
  command:
    cmd: dnf -y module disable mysql

- name: Enable ProxySQL repo
  when: >
    proxysql_version != '' and
    (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  ansible.builtin.template:
    src: roles/mysql/templates/proxysql.repo.j2
    dest: /etc/yum.repos.d/proxysql.repo

- name: Enable local repo.* caching
  include_tasks: common/tasks/repo_cache.yaml

- name: Install db packages
  include_tasks: common/tasks/install_db_packages.yml

- name: Install Garbd
  when: ('garbd' in db_features.split(',')) and (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ os[dist][soft].garbd_packages }}"

- name: Setup and start Garbd
  when: master_ip != '' and ('garbd' in db_features.split(','))
  command:
    cmd: /bin/bash /vagrant/tools/setup_garbd.sh "{{ master_ip }}" root "{{ db_password }}" "{{'cluster1' if cluster_name == '' else cluster_name}}"
    creates: /root/garbd.configured

- name: install Percona XtraBackup
  when: percona_xtrabackup_version != ""
  package:
    name: "percona-xtrabackup{{ '-24' if percona_xtrabackup_version.startswith('2.4') else '-80' if percona_xtrabackup_version.startswith('8.0')  else '' }}-{{ percona_xtrabackup_version }}.{{dist}}.x86_64"
    state: present

- name: ProxySQL
  when: proxysql_version !=''
  block:
    - name: install ProxySQL deb package
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
      apt:
        deb: "{{os[dist][soft].url}}"

- name: InnoDB ruby
  when: innodb_ruby_version != ''
  block:
    - name: install ruby and gem
      package:
        name: ruby
        state: present
    - name: install innodb_ruby
      command:
        cmd: /usr/bin/gem install innodb_ruby
        creates: /usr/local/bin/innodb_space

- name: install mysql_random_data_load
  when: mysql_random_data_load_version != ''
  shell:
    warn: false
    cmd: >-
      curl -sL https://github.com/Percona-Lab/mysql_random_data_load/releases/download/v{{mysql_random_data_load_version}}/mysql_random_data_load_{{mysql_random_data_load_version}}_Linux_x86_64.tar.gz
      | tar -C /usr/local/bin -xz mysql_random_data_load
    creates: /usr/local/bin/mysql_random_data_load

- name: Install mydumper
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux') and mydumper_version != ''
  yum:
    name: "{{os[dist].mydumper.install_packages}}"
    state: present
    disable_gpg_check: yes

- name: Install MySQL connector java
  when: mysql_connector_java_version != ''
  package:
    name: "{{ item }}"
    state: present
    disable_gpg_check: yes
  with_items: "{{os[dist].mysql_connector_java.install_packages}}"

- name: MySQL Setup tasks
  when: install_only == ''
  include_tasks: setup.yaml

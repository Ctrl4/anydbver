---
# tasks file for mariadb
- name: Setup yum repository
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux'
  copy:
    content: |
      [mariadb]
      name = MariaDB
      baseurl = http://yum.mariadb.org/{{ mariadb_version | regex_replace('^([0-9]+)\.([0-9]+)\..*$', '\1.\2') }}/{{ 'centos' if ansible_distribution == 'CentOS' or ansible_distribution == 'OracleLinux' else 'rhel' }}{{ ansible_distribution_version  | regex_replace('^([0-9]+)\..*$', '\1') }}-amd64
      gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck=1
      module_hotfixes=1
    dest: /etc/yum.repos.d/MariaDB.repo

- name: install MariaDB packages
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux'
  yum:
    state: present
    name: >-
      {{
        (os[dist][soft][mariadb_version].install_packages if mariadb_version in os[dist][soft] else os[dist][soft].install_packages) +
        ( [] if galera == '' or os[dist][soft].galera_packages == '' else
          os[dist][soft].galera_packages) +
        ( [] if debug_packages == '' else
          os[dist][soft].install_debug_packages) +
        ( [] if not ( rocksdb_enabled|bool and 'rocksdb_packages' in os[dist][soft] ) else
          os[dist][soft].rocksdb_packages)
      }}

# PMM
- name: Install Percona yum Repository
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux') and pmm_client_version != ""
  block:
    - name: install percona yum repo
      yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: present

- name: install PMM client
  when: pmm_client_version != ""
  package:
    name: "{{item}}"
    state: present
  with_items: "{{os[dist].pmm_client.install_packages }}"
- name: Setup pmm-admin
  when: pmm_client_version != '' and pmm_url != ''
  register: pmm_admin_config
  changed_when: "'already exists' not in pmm_admin_config.stdout"
  shell:
    cmd: '/usr/bin/pmm-admin config --server-insecure-tls --server-url="{{pmm_url}}" || true'

- name: MariaDB Setup tasks
  when: install_only == ''
  include_tasks: setup.yaml

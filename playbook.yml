- name: install percona server
  hosts: all
  become: yes
  vars:
    percona_server_56_version: "{{ percona_server_version if percona_server_version.startswith('5.6') else '' }}"
    percona_server_57_version: "{{ percona_server_version if percona_server_version.startswith('5.7') else '' }}"
    percona_server_80_version: "{{ percona_server_version if percona_server_version.startswith('8.0') else '' }}"
    percona_server_name: "{{ 'percona-server' if percona_server_80_version != '' else 'Percona-Server' }}"
    percona_server_major_ver: "{{ '' if percona_server_80_version != '' else '-57' if percona_server_57_version != '' else '-56' if percona_server_56_version != '' else '' }}"
    percona_server_full_ver: "{{ percona_server_major_ver }}-{{ percona_server_56_version }}{{ percona_server_57_version }}{{ percona_server_80_version }}.el7.x86_64"
    percona_xtradb_cluster_56_version: "{{ percona_xtradb_cluster_version if percona_xtradb_cluster_version.startswith('5.6') else '' }}"
    percona_xtradb_cluster_56_galera: "{{ percona_xtradb_cluster_galera if percona_xtradb_cluster_galera != '' else ( percona_xtradb_cluster_56_version | regex_replace('^.*\\.([0-9]+)\\.([0-9]+)$', '3-3.\\1-\\2') ) if percona_xtradb_cluster_version.startswith('5.6') else '' }}"
    percona_xtradb_cluster_57_version: "{{ percona_xtradb_cluster_version if percona_xtradb_cluster_version.startswith('5.7') else '' }}"
    percona_xtradb_cluster_80_version: "{{ percona_xtradb_cluster_version if percona_xtradb_cluster_version.startswith('8.0') else '' }}"
    percona_xtradb_cluster_name: "{{ 'Percona-XtraDB-Cluster' if percona_xtradb_cluster_version.startswith('5.6') or percona_xtradb_cluster_version.startswith('5.7') else 'percona-xtradb-cluster' }}"
    percona_xtradb_cluster_major_ver: "{{ '-56' if percona_xtradb_cluster_version.startswith('5.6') else '-57' if percona_xtradb_cluster_version.startswith('5.7') else '' }}"
    percona_xtradb_cluster_full_ver: "{{ percona_xtradb_cluster_major_ver }}-{{ percona_xtradb_cluster_version }}.el7.x86_64"
    percona_mysql_name: "{{ percona_server_name if percona_server_version != '' else percona_xtradb_cluster_name if percona_xtradb_cluster_version != '' else '' }}"
    percona_mysql_full_ver: "{{ percona_server_full_ver if percona_server_version != '' else percona_xtradb_cluster_full_ver if percona_xtradb_cluster_version != '' else '' }}"
    percona_xtrabackup_full_name: "percona-xtrabackup{{ '-24' if percona_xtrabackup_version.startswith('2.4') else '-80' if percona_xtrabackup_version.startswith('8.0')  else '' }}-{{ percona_xtrabackup_version }}.el7.x86_64"
    psmdb_major_ver: "{{ '-36' if psmdb_version.startswith('3.6') else '' }}"
    psmdb_name: "{{ 'Percona-Server-MongoDB' if psmdb_version.startswith('3.6') else 'percona-server-mongodb' }}"
    pbm_version_short: "{{ pbm_version | regex_replace('^([0-9]+\\.[0-9]+\\.[0-9]+)-.*$', '\\1') }}"
    pmm_client_full_name: "pmm{{ '2' if pmm_client_version.startswith('2') else '' }}-client-{{ pmm_client_version }}.el7.x86_64"
    percona_postgresql_major_ver: "{{ '11' if percona_postgresql_version.startswith('11.') else '12' if percona_postgresql_version.startswith('12.') else '' }}"
    percona_k8s_op_name: "percona-{{ 'xtradb-cluster' if percona_k8s_op_pxc_version != '' else 'server-mongodb' if percona_k8s_op_psmdb_version != '' else '' }}-operator"
    percona_k8s_op_version: "{{ percona_k8s_op_pxc_version if percona_k8s_op_pxc_version != '' else percona_k8s_op_psmdb_version }}"
  tasks:
    - name: install percona yum repo
      yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: present
    - name: enable Percona Server 8.0 repo
      when: percona_server_80_version != ""
      command:
        cmd: /usr/bin/percona-release enable ps-80
        creates: /etc/yum.repos.d/percona-ps-80-release.repo
    - name: enable Percona XtraDB Cluster 8.0 repo
      when: percona_xtradb_cluster_80_version != ""
      command:
        cmd: /usr/bin/percona-release enable pxc-80
        creates: /etc/yum.repos.d/percona-pxc-80-release.repo
    - name: enable Percona Server for MongoDB 4.0
      when: psmdb_version.startswith('4.0')
      command:
        cmd: /usr/bin/percona-release enable psmdb-40
        creates: /etc/yum.repos.d/percona-psmdb-40-release.repo
    - name: enable Percona Server for MongoDB 4.2
      when: psmdb_version.startswith('4.2')
      command:
        cmd: /usr/bin/percona-release enable psmdb-42
        creates: /etc/yum.repos.d/percona-psmdb-42-release.repo
    - name: enable Percona Distribution for PostgreSQL 11.5
      when: percona_postgresql_version.startswith('11.5')
      command:
        cmd: /usr/bin/percona-release enable ppg-11.5
        creates: /etc/yum.repos.d/percona-ppg-11.5-release.repo
    - name: enable Percona Distribution for PostgreSQL 11.6 and 11.7
      when: percona_postgresql_version.startswith('11.6') or percona_postgresql_version.startswith('11.7')
      command:
        cmd: /usr/bin/percona-release enable ppg-11
        creates: /etc/yum.repos.d/percona-ppg-11-release.repo
    - name: enable Percona Distribution for PostgreSQL 12.2
      when: percona_postgresql_version.startswith('12.2')
      command:
        cmd: /usr/bin/percona-release enable ppg-12.2 testing
        creates: /etc/yum.repos.d/percona-ppg-12.2-testing.repo

    - name: install Percona MySQL shared compat
      when: percona_server_57_version != "" or percona_server_80_version != "" or percona_xtradb_cluster_57_version != "" or percona_xtradb_cluster_80_version != ""
      package:
        name: "{{ percona_mysql_name }}-shared-compat{{ percona_mysql_full_ver }}"
        state: present
    - name: install Percona MySQL client libraries
      when: percona_server_56_version != "" or percona_server_57_version != "" or percona_server_80_version != "" or percona_xtradb_cluster_56_version != "" or percona_xtradb_cluster_57_version != "" or percona_xtradb_cluster_80_version != ""
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ percona_mysql_name }}-shared{{ percona_mysql_full_ver }}"
        - "{{ percona_mysql_name }}-client{{ percona_mysql_full_ver }}"

    - name: install Percona XtraBackup
      when: percona_xtrabackup_version != ""
      package:
        name: "{{ percona_xtrabackup_full_name }}"
        state: present
    - name: install Percona XtraDB Cluster 5.6 server
      when: percona_xtradb_cluster_56_version != ""
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "Percona-XtraDB-Cluster-galera-{{ percona_xtradb_cluster_56_galera }}.el7.x86_64"
        
    - name: install Percona MySQL server
      when: percona_server_56_version != "" or percona_server_57_version != "" or percona_server_80_version != "" or percona_xtradb_cluster_56_version != "" or percona_xtradb_cluster_57_version != "" or percona_xtradb_cluster_80_version != ""
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ percona_mysql_name }}-server{{ percona_mysql_full_ver }}"
    
    # MongoDB
    - name: install Percona Server for MongoDB
      when: psmdb_version.startswith('3.6') or psmdb_version.startswith('4.0') or psmdb_version.startswith('4.2')
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ psmdb_name }}{{ psmdb_major_ver }}-tools-{{ psmdb_version }}.el7.x86_64"
        - "{{ psmdb_name }}{{ psmdb_major_ver }}-shell-{{ psmdb_version }}.el7.x86_64"
        - "{{ psmdb_name }}{{ psmdb_major_ver }}-server-{{ psmdb_version }}.el7.x86_64"
        - "{{ psmdb_name }}{{ psmdb_major_ver }}-mongos-{{ psmdb_version }}.el7.x86_64"
        - "{{ psmdb_name }}{{ psmdb_major_ver }}-{{ psmdb_version }}.el7.x86_64"
    
    - name: install Percona Backup for MongoDB
      when: pbm_version != ""
      yum:
        name: "https://www.percona.com/downloads/percona-backup-mongodb/percona-backup-mongodb-{{ pbm_version_short }}/binary/redhat/7/x86_64/percona-backup-mongodb-{{pbm_version}}.el7.x86_64.rpm"
        state: present
    
    # PMM
    - name: install PMM client
      when: pmm_client_version != ""
      package:
        name: "{{ pmm_client_full_name }}"
        state: present

    - name: install podman (like docker)
      when: pmm_server_version != ""
      package:
        name: podman
        state: present
    - name: Start PMM
      when: pmm_server_version != ""
      shell:
        cmd: "podman create -v /srv --name pmm-data docker.io/percona/pmm-server:{{ pmm_server_version }} /bin/true ; podman run -d -p 80:80 -p 443:443 --volumes-from pmm-data --name pmm-server docker.io/percona/pmm-server:{{ pmm_server_version }} ; podman ps | grep pmm-server && touch /root/pmm-server-created"
        creates: /root/pmm-server-created

    # PostreSQL
    - name: install Percona Distribution for PostgreSQL
      when: percona_postgresql_version.startswith('11.') or percona_postgresql_version.startswith('12.')
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "percona-postgresql{{ percona_postgresql_major_ver }}-libs-{{ percona_postgresql_version }}.el7.x86_64"
        - "percona-postgresql{{ percona_postgresql_major_ver }}-{{ percona_postgresql_version }}.el7.x86_64"
        - "percona-postgresql{{ percona_postgresql_major_ver }}-server-{{ percona_postgresql_version }}.el7.x86_64"

    - name: Create Postgres Database
      when: (percona_postgresql_version.startswith('11.') or percona_postgresql_version.startswith('12.') ) and db_password != ""
      shell:
        cmd: "echo {{ db_password }} > /tmp/root-pw.txt;PGSETUP_INITDB_OPTIONS='--pwfile=/tmp/root-pw.txt' /usr/pgsql-{{ percona_postgresql_major_ver }}/bin/postgresql-{{ percona_postgresql_major_ver }}-setup initdb;echo \"listen_addresses = '*'\" >> /var/lib/pgsql/{{ percona_postgresql_major_ver }}/data/postgresql.conf;echo \"host    all             all             0.0.0.0/0            md5\" >> /var/lib/pgsql/{{ percona_postgresql_major_ver }}/data/pg_hba.conf"
        creates: "/var/lib/pgsql/{{ percona_postgresql_major_ver }}/data/pg_hba.conf"

    - name: install Percona Toolkit
      when: percona_toolkit_version != ""
      package:
        name: "percona-toolkit-{{ percona_toolkit_version }}.el7.x86_64"
        state: present

    - name: Set MySQL 5.6 database password
      when: (percona_server_56_version != "" or percona_xtradb_cluster_56_version != "") and db_password != ""
      shell:
        cmd: "mysqld --user=mysql --loose-wsrep-provider='none' --skip-networking &>/dev/null & mysqladmin --silent --connect-timeout=30 --wait=4 ping ; mysql -e \"SET PASSWORD FOR root@localhost = PASSWORD('{{ db_password }}');GRANT ALL PRIVILEGES ON *.* TO root@'%' IDENTIFIED BY '{{ db_password }}';\" ; echo -e \"[client]\npassword={{ db_password }}\" > /root/.my.cnf;mysqladmin shutdown; while pgrep -x mysqld ; do sleep 1 ; done"
        creates: /root/.my.cnf
    - name: Create MySQL Database
      when: (percona_server_57_version != "" or percona_server_80_version != "" or percona_xtradb_cluster_57_version != "" or percona_xtradb_cluster_80_version != "") and db_password != ""
      shell:
        cmd: "mysqld --initialize-insecure --user=mysql;mysqld --user=mysql --loose-wsrep-provider='none' --skip-networking &>/dev/null & mysqladmin --silent --connect-timeout=30 --wait=4 ping ; mysql -e \"ALTER USER root@localhost IDENTIFIED BY '{{ db_password }}';CREATE USER root@'%' IDENTIFIED BY '{{ db_password }}';\" ; echo -e \"[client]\npassword={{ db_password }}\" > /root/.my.cnf;mysqladmin shutdown; while pgrep -x mysqld ; do sleep 1 ; done"
        creates: /root/.my.cnf

    - name: Create MongoDB database
      when: db_password != "" and psmdb_version != ""
      shell:
        cmd: "systemctl start mongod;until mongo --eval 'print(\"waited for connection\")' &>/dev/null ; do sleep 2 ; done;/bin/percona-server-mongodb-enable-auth.sh -q;mongo admin --eval 'db.changeUserPassword(\"dba\", \"{{ db_password }}\")';systemctl stop mongod;sed -i -e 's/127.0.0.1/0.0.0.0/g' /etc/mongod.conf;echo 'db = connect(\"mongodb://dba:{{ db_password }}@127.0.0.1:27017/admin\")' > /root/.mongorc.js"
        creates: /root/.mongorc.js

    - name: Download k3s kubernetes distribution
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      get_url:
        url: https://github.com/rancher/k3s/releases/download/v1.17.5%2Bk3s1/k3s
        dest: /usr/local/bin/k3s
        mode: '0755'
    - name: Download k3s systemd service
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      get_url:
        url: https://raw.githubusercontent.com/rancher/k3s/master/k3s.service
        dest: /etc/systemd/system/k3s.service
        mode: '0644'
    - name: Fix k3s /dev/kmsg symlink
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      file:
        src: /dev/console
        dest: /dev/kmsg
        state: link
    - name: Create kubectl symlink
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      file:
        src: /usr/local/bin/k3s
        dest: /usr/bin/kubectl
        state: link
    - name: Start k3s
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      shell:
        warn: false
        cmd: "touch /etc/systemd/system/k3s.service.env;systemctl daemon-reload; systemctl start k3s"
        creates: /etc/systemd/system/k3s.service.env
    - name: Install git for Percona Operator setup
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      package:
        name: git
        state: present
    - name: Install operator
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      shell:
        cmd: >-
          cd /root;
          git clone -b release-{{ percona_k8s_op_version }} https://github.com/percona/{{ percona_k8s_op_name }};
          cd {{ percona_k8s_op_name }};
          kubectl apply -f deploy/bundle.yaml;
          kubectl apply -f deploy/secrets.yaml;
          kubectl apply -f deploy/ssl-secrets.yaml;
          until kubectl get pod -l name={{ percona_k8s_op_name }}|grep Running &>/dev/null;do sleep 2;done
        creates: /root/{{ percona_k8s_op_name }}/deploy/cr.yaml
    - name: Start single-node cluster
      when: percona_k8s_op_pxc_version != "" or percona_k8s_op_psmdb_version != ""
      shell:
        warn: false
        cmd: >-
          sed
          -e 's/antiAffinityTopologyKey: .*$/antiAffinityTopologyKey: \"none\"/g'
          -e 's/allowUnsafeConfigurations: false/allowUnsafeConfigurations: true/'
          /root/{{ percona_k8s_op_name }}/deploy/cr.yaml > /root/{{ percona_k8s_op_name }}/deploy/cr-single.yaml;
          kubectl apply -f /root/{{ percona_k8s_op_name }}/deploy/cr-single.yaml
        creates: /root/{{ percona_k8s_op_name }}/deploy/cr-single.yaml
